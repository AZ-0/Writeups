

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_94 = Integer(94); _sage_const_2 = Integer(2); _sage_const_10 = Integer(10); _sage_const_0 = Integer(0)
from sage.all import QQ, polygens, EllipticCurve_from_cubic
from hashlib import sha256
from tqdm import trange

X,Y,Z = polygens(QQ, 'x,y,z')
phi = EllipticCurve_from_cubic(X**_sage_const_3  + Y**_sage_const_3  - _sage_const_94 *Z**_sage_const_3 )
E = phi.codomain()
P, = E.gens()
R = P

for _ in trange(_sage_const_2 **_sage_const_10 ):
    psi = phi.inverse()
    Q = psi(R)
    Q.clear_denominators()
    x,y,z = Q
    if x>_sage_const_0  and y>_sage_const_0 :
        print('FOUND!!!')
        print('x =', x)
        print('y =', y)
        print('z =', z)
        h = sha256(str(z).encode()).hexdigest()
        h = f"FCSC{{{h}}}"
        print(h)
        with open('found.txt', 'a') as file:
            file.write(h)
        break
    R += P

